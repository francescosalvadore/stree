===================================
Compiling and running
===================================

-------------------------------------
LaTeX example
-------------------------------------

This is an inline math :math:`x^2+y^2=z^2`.

For long equations, use the ``math`` directive:

.. math::

   \gamma = \sqrt{(\alpha^2 + \beta^2)}


-------------------------------------
Compilation
-------------------------------------

To compile first go to `code` folder and write a configuration file, e.g. `makefile.inc.my_machine`. The file contains 7 
parameters:

- `EQUATION`: solved equation: currently only `singleideal` (single-specie Navier-Stokes) is supported
- `BACKEND`: computing backend: `gpu` (CUDA Fortran for NVIDIA GPUs) or `cpu` (Traditional CPU) is supported
- `COMPILE`: compiler: `nv-cuda` (NVIDIA CUDA), `nv` (NVIDIA CPU), `intel` (Intel), `gnu` (GNU), `ibmxl` (IBM XL), `cray-cuda` (Cray CUDA)
- `MODE`: compilation mode: `opt` (optimized, default) or `debug` (debug options enabled)
- `PREC`: floating point precision: `double` (double precision, default), `single` (single precision)
- `CUDA_VER`: CUDA version (meaningful if CUDA is enabled): e.g., `11.0`
- `MPI_CMD`: MPI wrapper command: this is an optional parameter to override the MPI wrapper command given by the chosen compiler

An example configuration file is available as `makefile.inc.m100_cuda` and allows you to easily compile on Marconi100 cluster at CINECA. Once you have a configuration file for your machine, you can create a link to that file to use it:

.. code-block:: bash

   ln -s makefile.inc.m100_cuda makefile.inc


To compile it is now sufficient to run:

.. code-block:: bash

   make

and you should have `streams_2.exe` executable in your folder.

-------------------------------------
Running
-------------------------------------

First prepare an input file for your equation. For `singleideal` equation the input file is `singleideal.ini`.
Some examples of input files are provided in folder `examples`. For instance, copy the `subsonic_channel` case to
your run folder. 

To run the simulation you can use MPI launcher:

.. code-block:: bash

   mpirun -np 4 ./streams_2.exe

Depending on the configuration of your machine, you may need to use a queue system to launch the simulation.
For instance, on Marconi100 at Cineca, a SLURM submission script may be:

.. code-block:: bash

   #!/bin/bash
   #SBATCH --partition=m100_usr_prod
   #SBATCH --time=24:00:00 
   #SBATCH --cpus-per-task 32
   #SBATCH --exclusive
   #SBATCH --ntasks-per-node=4
   #SBATCH --gpus-per-node=4
   #SBATCH --ntasks-per-socket 2
   #SBATCH --nodes 1
   
   module purge
   module load profile/global
   module load gnu/8.4.0 hpc-sdk/2022--binary spectrum_mpi/10.4.0--binary
   
   mpirun -n 4 -gpu ./streams_2.exe
